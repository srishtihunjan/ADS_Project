import java.util.ArrayList;

public class HuffmanTree {

	public static ArrayList<Node> createHuffmanTreeFromBinaryHeap(ArrayList<Node> binaryHeap) {

		while (binaryHeap.size() > 1) {
			Node element1 = MinHeap.Removemin(binaryHeap);
			Node element2 = MinHeap.Removemin(binaryHeap);
			Node element = new Node(element1.frequency + element2.frequency, -1);
			element.leftChild = element1;
			element1.parent = element;
			element.rightChild = element2;
			element2.parent = element;

			MinHeap.Insert(binaryHeap, element);
		}
		return binaryHeap;
	}

	public static void assignCodes(Node root) {
		if (root.leftChild != null)
			assignCodes(root.leftChild);
		if (root.leftChild != null)
			assignCodes(root.rightChild);
	}

}
